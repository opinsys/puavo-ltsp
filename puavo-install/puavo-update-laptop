#!/bin/sh

hosttype=$(cat /etc/puavo/hosttype)

if [ "$hosttype" != "laptop" ]; then
  echo 'This script should be run only for laptops!' > /dev/stderr
  exit 1
fi

if [ "$1" = "--use-rate-limit" ]; then
  update_ltspimage_params="--rate-limit 50k"
else
  update_ltspimage_params=""
fi

set -u

puavo_rest_request() {
  urlpath=$1

  puavo_rest_server=$(puavo-resolve-api-server) || return
  curl --cacert /etc/puavo/certs/rootca.pem \
       --header "Authorization: Bootserver" \
       --fail \
       --max-time 60 \
       --silent \
       "${puavo_rest_server}/${urlpath}"
}

puavo_rest_request_and_replace() {
  urlpath=$1
  filepath=$2

  tmp_filepath="${filepath}.tmp"
  install -o root -g root -m 600 /dev/null "$tmp_filepath" || return
  
  puavo_rest_request "$urlpath" > "$tmp_filepath" || return
  replace_if_changed "$filepath"  "$tmp_filepath"
}

replace_if_changed() {
  dest=$1
  src=$2

  if cmp "$src" "$dest" >/dev/null 2>&1; then
    rm -f "$src"
  else
    mv "$src" "$dest"
  fi
}

update_device_json() {
  puavo_rest_request_and_replace "v3/devices/$(hostname)" \
			         /state/etc/puavo/device.json || return
  chmod 644 /state/etc/puavo/device.json
}

update_external_files() {
  puavo-sync-external-files || return
  puavo-handle-external-files-actions
}

update_ltsconf() {
  install -o root -g root -m 600 /dev/null /state/etc/lts.conf.tmp || return
  puavo-lts > /state/etc/lts.conf.tmp                              || return
  replace_if_changed /state/etc/lts.conf /state/etc/lts.conf.tmp
}

update_ltsp_image() {
  # XXX should we use ruby or should we use shell?  or is this okay?
  get_imagename_from_puavo() {
    cat <<'EOF' | ruby1.9.1
require 'puavo'

puavo = Puavo::Client::Base.new(PUAVO_ETC.domain,
                                PUAVO_ETC.ldap_dn,
                                PUAVO_ETC.ldap_password)
device = puavo.devices.find_by_hostname(PUAVO_ETC.hostname)

if device.device_image then
  puts "#{ device.device_image }.img"
else
  exit 1
end
EOF
  }

  next_imagename=$(get_imagename_from_puavo) || return
  if [ -n "$next_imagename" ]; then
    puavo-install-and-update-ltspimages $update_ltspimage_params \
					"$next_imagename"
  fi
}

update_wlan_configurations() {
  puavo_rest_request_and_replace "v3/devices/$(hostname)/wlan_networks" \
				 /state/etc/puavo/wlan.json
}

# Update several (different) things.  Even if one thing cannot be updated,
# try to update others (order does not matter here, but do this sequentially
# anyway).

update_ltsconf             || true
update_device_json         || true
update_external_files      || true
update_wlan_configurations || true
update_ltsp_image          || true
