has_device_tag() {
  jq -r '.tags[]' /etc/puavo/device.json 2>/dev/null | grep -qx "$1"
}

# Blacklist r8168 by default, but if r8169 is blacklisted in kernel command
# line, then blacklist r8169 and whitelist r8168.
# (initramfs/scripts/init-top/blacklist-r816x has same code
# so that this works in netboot devices as well.)

echo "blacklist r8168" > /etc/modprobe.d/r8168-dkms.conf
for x in $(cat /proc/cmdline); do
  if [ "$x" = "modprobe.blacklist=r8169" ]; then
    echo "blacklist r8169" > /etc/modprobe.d/r8168-dkms.conf
  fi
done

# blacklist yenta_socket by default, it causes boot failures on some hardware
if has_device_tag no_blacklist_yenta_socket \
     && ! has_device_tag no_no_blacklist_yenta_socket; then
  rm -f /etc/modprobe.d/blacklist-yenta_socket.conf
else
  cat <<'EOF' > /etc/modprobe.d/blacklist-yenta_socket.conf
blacklist yenta_socket
EOF
fi

if has_device_tag blacklist_bcmwl \
     && ! has_device_tag no_blacklist_bcmwl; then
  cat <<'EOF' > /etc/modprobe.d/blacklist-bcm43.conf
# This file normally blacklists "b43" etc., but tag "blacklist_bcmwl" was
# effective and we blacklist "wl" instead (the closed Broadcom driver).
blacklist wl
EOF
else
  cat <<'EOF' > /etc/modprobe.d/blacklist-bcm43.conf
# Warning: This file is autogenerated by bcmwl. All changes to this file will be lost.
blacklist b43
blacklist b43legacy
blacklist ssb
blacklist bcm43xx
blacklist brcm80211
blacklist brcmfmac
blacklist brcmsmac
blacklist bcma
EOF
fi
